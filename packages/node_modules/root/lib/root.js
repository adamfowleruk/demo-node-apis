const express = require('express')
const hateoasLinker = require('express-hateoas-links');

const app = express()
const port = process.env.PORT || 3000

const replacer = function (req, href) {
  // Are we an explicit reference to another service?
  const replacements = req.get("X-HttpReplaceURLPrefixes");
  if (undefined !== replacements) {
    // Now separate out replacements
    const splits = replacements.split(";");
    var replacement = href;
    for (var i = 0;i < splits.length;i++) {
      var parts = splits[i].split("=");
      if (replacement.startsWith(parts[0])) {
        replacement = parts[1] + replacement.substring(parts[0].length);
      }
    }
    return replacement;
  }

  // See if we're a plain root (i.e. this service) url, or under the root (no host specified)
  if (href.startsWith("/")) {
    const serviceUrl = req.get("X-HttpServiceURL");
    if (undefined !== serviceUrl) {
      return serviceUrl + href.substring(1);
    }
    return href;
  }
}

module.exports = {
  start: function (settings) {

    // replace standard express res.json with the new version
    app.use(hateoasLinker);

    app.get('/', (req, res) => {

      // create an example JSON Schema
      var noSchema = {
      };
    
      res.json(noSchema, [
          {rel: "self", method: "GET", href: replacer(req,"/")},
          {rel: "addresses", method: "GET", href: replacer(req,"/addresses")}
          // TODO other root app links here, potentially rewritten by Istio/Envoy in Service Mesh
        ]
      )
    })

    app.listen(port, () => {
      console.log(`Root app listening at http://localhost:${port}`)
    })

  }
};
var ADDRESSBOOK = require("./lib/root.js");
var nopt = require("nopt");
var path = require("path");
var fs = require("fs-extra");


var settingsFile;

var knownOpts = {
  "help": Boolean,
  "port": Number,
  "settings": [path],
  "title": String
};

var shortHands = {
  "?": ["--help"],
  "p": ["--port"],
  "s": ["--settings"]
};

nopt.invalidHandler = function(k, v, t) {
  // TODO: console.log(k,v,t);
}

var parsedArgs = nopt(knownOpts, shortHands, process.argv, 2)

if (parsedArgs.help) {
  console.log("Root app ");
  console.log("Usage: root [-v] [-?] [--settings settings.js] [--userDir DIR]");
  console.log("                [--port PORT] [--title TITLE] ");
  console.log("");
  console.log("Options:");
  console.log("  -p, --port     PORT  port to listen on");
  console.log("  -s, --settings FILE  use specified settings file");
  console.log("      --title    TITLE process window title");
  console.log("  -?, --help           show this help");
  process.exit();
}

if (parsedArgs.settings) {
  // User-specified settings file
  settingsFile = parsedArgs.settings;
// } else if (parsedArgs.userDir && fs.existsSync(path.join(parsedArgs.userDir, "settings.js"))) {
//   // User-specified userDir that contains a settings.js
//   settingsFile = path.join(parsedArgs.userDir, "settings.js");
// } else {
//   if (fs.existsSync(path.join(process.env.ADDRESSBOOK_HOME, ".config.json"))) {
//     // ADDRESSBOOK_HOME contains user data - use its settings.js
//     settingsFile = path.join(process.env.ADDRESSBOOK_HOME, "settings.js");
//   } else if (process.env.HOMEPATH && fs.existsSync(path.join(process.env.HOMEPATH, ".addressbook", ".config.json"))) {
//     // Consider compatibility for older versions
//     settingsFile = path.join(process.env.HOMEPATH, ".addressbook", "settings.js");
  } else {
    var userDir = parsedArgs.userDir || path.join(process.env.HOME || process.env.USERPROFILE || process.env.HOMEPATH, ".rootapp");
    var userSettingsFile = path.join(userDir, "settings.js");
    if (fs.existsSync(userSettingsFile)) {
      // $HOME/.addressbook/settings.js exists
      settingsFile = userSettingsFile;
    } else {
      var defaultSettings = path.join(__dirname, "settings.js");
      var settingsStat = fs.statSync(defaultSettings);
      if (settingsStat.mtime.getTime() <= settingsStat.ctime.getTime()) {
        // Default settings file has not been modified - safe to copy
        fs.copySync(defaultSettings, userSettingsFile);
        settingsFile = userSettingsFile;
      } else {
        // Use default settings.js as it has been modified
        settingsFile = defaultSettings;
      }
    }
  // }
}

try {
  var settings = require(settingsFile);
  settings.settingsFile = settingsFile;
} catch (err) {
  console.log("Error loading settings file: " + settingsFile)
  if (err.code == 'MODULE_NOT_FOUND') {
    if (err.toString().indexOf(settingsFile) === -1) {
      console.log(err.toString());
    }
  } else {
    console.log(err);
  }
  process.exit();
}

try {
  ADDRESSBOOK.start().then(function() {
    console.log("Root app start returned")
  });
} catch (err) {
  console.log("Failed to start: " + err);
  console.log(err.stack)
};